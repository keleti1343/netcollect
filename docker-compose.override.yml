# Development overrides for docker-compose
# This file is automatically loaded by docker-compose for development

services:
  # Development overrides for FastAPI services
  fortinet-api-1:
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
    volumes:
      - ./fortinet-api:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8001:8000"  # Expose for direct access during development

  fortinet-api-2:
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
    volumes:
      - ./fortinet-api:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8002:8000"  # Expose for direct access during development

  # Production overrides for Next.js services (using production build)
  fortinet-web-1:
    build:
      context: ./fortinet-web
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
    ports:
      - "3001:3000"  # Expose for direct access during development

  fortinet-web-2:
    build:
      context: ./fortinet-web
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
    ports:
      - "3002:3000"  # Expose for direct access during development

  # Development database with exposed port
  postgres-db:
    ports:
      - "5433:5432"  # Expose database for direct access
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # Development Redis with exposed port
  redis:
    ports:
      - "6379:6379"  # Expose Redis for direct access

  # Development nginx with debug logging and enhanced configuration
  nginx:
    environment:
      - NGINX_DEBUG=true
      - NGINX_SKIP_TEST=true  # Skip config test in development
      # Development-friendly rate limits
      - NGINX_API_RATE_LIMIT=6000
      - NGINX_WEB_RATE_LIMIT=2200
      - NGINX_HEALTH_RATE_LIMIT=1800
      # Smaller zone sizes for development
      - NGINX_API_ZONE_SIZE=5m
      - NGINX_WEB_ZONE_SIZE=5m
      - NGINX_HEALTH_ZONE_SIZE=2m
      - NGINX_CONN_ZONE_SIZE=5m

  # Always include testloader in development
  testloader:
    build:
      context: ./testloader
      dockerfile: Dockerfile
    profiles: []  # Remove testing profile to always include in development
    volumes:
      - ./testloader:/app
    environment:
      - NODE_ENV=development
      - TARGET_URL=http://nginx

  # Database manager for development
  db-manager:
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=postgres
      - PGPASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-db/scripts:/scripts
      - ./postgres-db/exports:/exports
      - ./postgres-db/data:/docker-entrypoint-initdb.d
    profiles: []  # Remove management profile to always include in development